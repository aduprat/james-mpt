package org.apache.james.mailboxmanager.torque.om;

import java.util.ArrayList;
import java.util.List;

import org.apache.torque.TorqueException;
import org.apache.torque.util.BasePeer;
import org.apache.torque.util.Criteria;

import com.workingdogs.village.Record;


/**
 * The skeleton for this class was autogenerated by Torque on:
 * 
 * [Wed Sep 06 11:15:19 CEST 2006]
 * 
 * You should add additional methods to this class to meet the application
 * requirements. This class will only be generated as long as it does not
 * already exist in the output directory.
 */
public class MessageRowPeer extends
        org.apache.james.mailboxmanager.torque.om.BaseMessageRowPeer {

    /**
     * 
     */
    private static final long serialVersionUID = 1708650986440774692L;

    public static List doSelectJoinMessageFlags(Criteria criteria)
            throws TorqueException {
        
        MessageRowPeer.addSelectColumns(criteria);
        int offset = numColumns + 1;
        MessageFlagsPeer.addSelectColumns(criteria);

        criteria.addJoin(MessageRowPeer.MAILBOX_ID, MessageFlagsPeer.MAILBOX_ID);
        criteria.addJoin(MessageRowPeer.UID, MessageFlagsPeer.UID);
        
        List rows = BasePeer.doSelect(criteria);
        List result = new ArrayList(rows.size());
        
        for (int i = 0; i < rows.size(); i++) {
            Record row = (Record) rows.get(i);
            
            Class omClass = MessageRowPeer.getOMClass();
            MessageRow messageRow = (MessageRow) MessageRowPeer.row2Object(row,
                    1, omClass);
            
            omClass = MessageFlagsPeer.getOMClass();
            MessageFlags messageFlags = (MessageFlags) MessageFlagsPeer.row2Object(row,
                    offset, omClass);            
            messageRow.setMessageFlags(messageFlags);
            
            result.add(messageRow);
        }
        return result;
    }

}
